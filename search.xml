<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>看房笔记_2021</title>
    <url>/2022/01/06/2021%E7%9C%8B%E6%88%BF%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<center>***</center>
看房要点：

<ul>
<li>采光，不止是光线，而是太阳光直射的时长</li>
<li>方位，光线也可通过判断方位来评估，有现房或者楼已开始在建的话，直接去看实物，使用手机指南针判断方位，应该让阳台窗户有对着南向（就湖北而言，面向南方，太阳应该是在面前的从动到西，而不是正头顶的从东到西）</li>
</ul>
<span id="more"></span>

<ul>
<li><p>楼层，选择中等偏上，但除去楼顶1-2层的位置，有介意高层的也尽量选择总层数的1/4以上处。这样不管是采光还是风景还是噪音都可以有一定的保障。举个例子：40层的楼，理想选择25-38，想要低也不要低于10层（长辈比较介意的会有带4的楼层，因为迷信有谐音）</p>
</li>
<li><p>还有比较重要的几个需要关注的指标：</p>
<ul>
<li>①单价，没钱的我还是比较重视这点的，好在总价还跟面积有关，所以需要自己权衡，户型和单价(基本挂钩地理位置)这两个因素的了。举个例子：想要单价好的地方，那就买小面积的。</li>
<li>②户型，个人想要三房两卫；</li>
<li>③车位比，低于1，还是不太ok的叭？</li>
<li>④容积率，2.* - 4.* 就好了有条件越低越好。1.* 属于别墅型，5.* 我觉得像畜牧。但是现在开发商都想用有限的土地赚无限的金钱，超高层楼多了，容积率都在3.* -4.* 之间</li>
</ul>
</li>
<li><p>周边</p>
<p>根据事件发生的概率，以下的几点就是我的考虑顺序</p>
<ul>
<li>教育，幼、小、中、高。幼儿园现在小区都会有配套，着重小学、中学&lt;考虑二手房，就要问学位有没有使用&gt;。高中，虽然是选拔考试，但是有新老城区之分，介意的也可以参考，丹我觉得孩子高中那是20年以后的事了，我管不着。</li>
<li>交通，地铁、公交、驾车出行，都要考虑。我重点考虑的驾车出行，地铁、公交次之。（提醒：同片区离地铁距离越近，市场价值越好，出门200米就是地铁，和地铁距离1.5公里，房价是有蛮差别的）</li>
<li>医疗，医疗我觉得周边有像样的大医院就行，总不至于只有个诊所叭？至于三甲医院，驾车半小时内有到的就可以了</li>
<li>生活，商场、银行、超市等都算叭，把菜市场也算上？好像还没有哪个楼盘说自己没有商圈的，也基本像幼儿园一样自带，主要看人气，所以关键还是看2点：①小区入住够不够，②周边楼盘多不多。人多了&lt;入住的人要够多&gt;，这些做生意的人会放着钱不赚吗？</li>
<li>休闲，公园、体育馆等，可能我是一个并不太注重生活品质的人，周边怎样都不影响我跑步休闲好像……，当然，有的小区自带人车分流跑道，恒温游泳池，旁边就是公园江滩什么的，也确实比较舒服。这个指标我称之为，条件允许可以要的，不强求指标。</li>
</ul>
</li>
<li><p>开发商，物业这块，能讲究就讲究一下，连恒大都倒了，还有什么不可能。适当考虑，不太作重点，也不是完全不考虑啊，有的已经明显有风险，老板跑路的，还是要慎重一点把</p>
</li>
</ul>
<p>几个注意事项：</p>
<ul>
<li>信息查证：<a href="http://fgj.wuhan.gov.cn/bsfw_44/">房管局</a>可以查到土地征收，规划，楼盘备案，每栋楼每层每户的销售情况，不要听信销售的鬼话。</li>
<li>单价，备案价肯定比销售价高，能讲的讲讲价，销售总会有办法降价的。</li>
<li>通常楼盘都有以老带新的活动，不要随便把自己的姓名和电话给中介的人。可以问楼盘的销售。</li>
<li>二手房未满二的，税费可有点高。</li>
</ul>
<center>****</center>
看过的几个楼盘信息：

<p><a href="http://fgj.wuhan.gov.cn/bsfw_44/zxsbhcxxt/spfxm/">旭辉都会山-(广申房地产)</a>：单价15.4k，总价180w，近三环，近地铁，五号线已通车，配套小学残破不堪，菜市场拆迁受阻，对面有个拘留所。</p>
<img src="./img/1641466788020.png" width = 80% height = 60% div align=center/>

<img src="./img/1641466859453.png" width = 80% height = 60% div align=center />

<p>金地兰亭大境</p>
<p>美的君兰半岛</p>
<p>保利上城</p>
<p>景瑞天赋滨江</p>
]]></content>
      <tags>
        <tag>买房</tag>
        <tag>武汉2021看房笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX的入门使用</title>
    <url>/2021/12/26/LaTeX%E5%86%99%E6%AF%95%E4%B8%9A%E8%AE%BA%E6%96%87/</url>
    <content><![CDATA[<p>1、选择搭建LaTeX环境/选用在线编辑<br>    <a href="https://blog.csdn.net/Mikchy/article/details/94448707">搭建环境</a><br>    <a href="https://blog.csdn.net/qq_28966711/article/details/104246494">搭建LaTeX写作环境</a><br>    <a href="https://mirrors.tuna.tsinghua.edu.cn/CTAN/systems/texlive/Images/">清华TeXlive镜像</a></p>
<span id="more"></span>
<p><a href="https://www.overleaf.com/">在线LaTeX编辑器overleaf</a></p>
<p>2、入门使用资料<br><a href="https://x-magus.github.io/ThesisUESTC/">LaTeX毕业论文模板与写作</a><br><a href="https://www.luogu.com.cn/blog/IowaBattleship/latex-gong-shi-tai-quan">LaTeX公式大全</a><br><a href="https://blog.csdn.net/dogfat/article/details/106962966">TexStudio安装与简单使用</a><br><a href="https://blog.csdn.net/weixin_39278265/article/details/97832921">参考文献管理工具</a></p>
<p>3、查找论文<br><a href="https://gfsoso.99lb.net/sci-hub.html">谷粉</a><br><a href="https://arxiv.org/archive/cs">康奈尔大学</a><br><a href="https://dblp.uni-trier.de/">dblp</a><br><a href="https://xs.dailyheadlines.cc/">深度学术</a></p>
]]></content>
      <tags>
        <tag>论文写作</tag>
      </tags>
  </entry>
  <entry>
    <title>hello,Hexo（一）</title>
    <url>/2021/12/22/hello-Hexo%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>【本篇文章解决的事情：<br>        - 搭建hexo博客，并部署到github；<br>        - 博客源文/源码提交github管理】</p>
<span id="more"></span>

<ul>
<li>坑先知： <ul>
<li><a href="https://hexo.io/zh-cn/docs/">hexo官网</a>查看与node.js的版本对应</li>
<li>重要：github新建的仓库必须用[github用户名].github.io（例如：zhangsan.github.io）,并选择 README 初始化</li>
<li>Git Push报错:remote: error: GH007: Your push would publish a private email address. 解决方案：github账户下取消勾选，setting-&gt;emails-&gt;Keep my email address private</li>
</ul>
</li>
</ul>
<h2 id="1、准备"><a href="#1、准备" class="headerlink" title="1、准备"></a>1、准备</h2><p>（可以直接看<a href="https://hexo.io/zh-cn/docs/">hexo官网文档</a>，全面；也可参照下面这，简洁）</p>
<h3 id="1-1、注册安装"><a href="#1-1、注册安装" class="headerlink" title="1.1、注册安装"></a>1.1、注册安装</h3><ul>
<li><a href="https://github.com/">官网注册github</a>并创建一个新仓库myblog，注意上面提到的命名格式（建议用户名短一点，博客的访问会用上），创建一个新分支blog</li>
<li><a href="https://git-scm.com/">下载git</a>，并安装</li>
<li><a href="https://nodejs.org/en/download/">下载node.js</a>，并安装</li>
</ul>
<h3 id="1-2、验证"><a href="#1-2、验证" class="headerlink" title="1.2、验证"></a>1.2、验证</h3><pre><code>右键选择Git Bash Here，验证上面两个是否安装成功。
</code></pre>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git --version</span><br><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br></pre></td></tr></table></figure>
<h3 id="1-3、配置github信息-用注册的用户名，邮箱"><a href="#1-3、配置github信息-用注册的用户名，邮箱" class="headerlink" title="1.3、配置github信息(用注册的用户名，邮箱)"></a>1.3、配置github信息(用注册的用户名，邮箱)</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&#x27;user name&#x27;</span></span><br><span class="line">$ git config --global user.email <span class="string">&#x27;email.com&#x27;</span></span><br><span class="line"><span class="comment"># 检查配置</span></span><br><span class="line">$ git config --list</span><br></pre></td></tr></table></figure>

<h2 id="2、根据hexo官网文档建站"><a href="#2、根据hexo官网文档建站" class="headerlink" title="2、根据hexo官网文档建站"></a>2、根据<a href="https://hexo.io/zh-cn/docs/">hexo官网文档</a>建站</h2><pre><code>找到一个路径，右键选择Git Bash Here
</code></pre>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># clone仓库</span></span><br><span class="line">$ git <span class="built_in">clone</span> 仓库地址</span><br><span class="line">$ mkdir myblog</span><br><span class="line">$ <span class="built_in">cd</span> myblog</span><br><span class="line"><span class="comment"># 安装hexo</span></span><br><span class="line">$ npm install -g hexo-cli</span><br><span class="line"><span class="comment"># 验证</span></span><br><span class="line">$ hexo -v</span><br></pre></td></tr></table></figure>
<h3 id="2-1、建站"><a href="#2-1、建站" class="headerlink" title="2.1、建站"></a>2.1、建站</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在建站的路径下右键打开git命令行</span></span><br><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">$ hexo init</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure>
<h3 id="2-2、本地部署测试"><a href="#2-2、本地部署测试" class="headerlink" title="2.2、本地部署测试"></a>2.2、本地部署测试</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 编译</span></span><br><span class="line">$ hexo g</span><br><span class="line"><span class="comment"># 本地部署</span></span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p>浏览器打开<a href="http://localhost:4000/">http://localhost:4000</a> ，如果没出来，大概率端口占用了<br>Tips:修改端口号</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server -p 端口号</span><br></pre></td></tr></table></figure>

<h2 id="3、Hexo和Github-Pages绑定"><a href="#3、Hexo和Github-Pages绑定" class="headerlink" title="3、Hexo和Github Pages绑定"></a>3、Hexo和Github Pages绑定</h2><p>（为了别人也可以访问）</p>
<h3 id="3-1、本地生成密钥"><a href="#3-1、本地生成密钥" class="headerlink" title="3.1、本地生成密钥"></a>3.1、本地生成密钥</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用github注册那个邮箱，三个回车，生成密钥id_rsa和id_rsa.pub（默认存储路径是：C:\Users\Administrator\.ssh）</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;email.com&quot;</span></span><br><span class="line"><span class="comment"># 或</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱@xxx.com&quot;</span> -f <span class="string">&quot;github_id_rsa&quot;</span></span><br><span class="line">$ ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱@xxx.com&quot;</span> -f <span class="string">&quot;coding_id_rsa&quot;</span></span><br><span class="line"><span class="comment"># 切换目录</span></span><br><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ ls</span><br><span class="line"><span class="comment"># 添加密钥到ssh-agent</span></span><br><span class="line">$ <span class="built_in">eval</span> <span class="string">&quot;<span class="subst">$(ssh-agent -s)</span>&quot;</span></span><br><span class="line"><span class="comment"># 添加生成的SSH key到ssh-agent</span></span><br><span class="line">$ ssh-add ~/.ssh/id_rsa</span><br><span class="line">$ ssh-add ~/.ssh/coding_id_rsa</span><br><span class="line">$ ssh-add ~/.ssh/github_id_rsa</span><br></pre></td></tr></table></figure>
<h3 id="3-2、登录github网站，头像下settiongs–-gt-SSH-and-GPG-keys–-gt-SSH-keys–-gt-New-SSH-key"><a href="#3-2、登录github网站，头像下settiongs–-gt-SSH-and-GPG-keys–-gt-SSH-keys–-gt-New-SSH-key" class="headerlink" title="3.2、登录github网站，头像下settiongs–&gt;SSH and GPG keys–&gt;SSH keys–&gt;New SSH key"></a>3.2、登录github网站，头像下settiongs–&gt;SSH and GPG keys–&gt;SSH keys–&gt;New SSH key</h3><p>将id_rsa.pub文件里的内容复制上去</p>
<h3 id="3-3、测试ssh添加结果"><a href="#3-3、测试ssh添加结果" class="headerlink" title="3.3、测试ssh添加结果"></a>3.3、测试ssh添加结果</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br><span class="line">$ ssh -T git@e.coding.net</span><br><span class="line">$ ssh -T git@gitee.com</span><br></pre></td></tr></table></figure>

<h3 id="3-4、hexo中的配置文件-config-yml"><a href="#3-4、hexo中的配置文件-config-yml" class="headerlink" title="3.4、hexo中的配置文件_config.yml"></a>3.4、hexo中的配置文件_config.yml</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  <span class="comment"># 创建的github的新仓库的ssh地址</span></span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  <span class="comment"># 对应的新建的仓库的非default分支</span></span><br><span class="line">  branch: blog</span><br></pre></td></tr></table></figure>

<h2 id="4、部署"><a href="#4、部署" class="headerlink" title="4、部署"></a>4、部署</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在博客路径下安装一个扩展</span></span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 新建一篇博客，可在cmd中（没配就在博客所在路径下操作）</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> hexo new post <span class="string">&quot;title&quot;</span></span></span><br></pre></td></tr></table></figure>

<p>使用编辑器写好文章，我使用的Typora</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 生成部署</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">hexo d -g</span></span><br></pre></td></tr></table></figure>
<h2 id="5、访问"><a href="#5、访问" class="headerlink" title="5、访问"></a>5、访问</h2><p>http://用户名.github.io<br><a href="https://cz803.github.io/">https://cz803.github.io/</a></p>
<h2 id="6、更新博客"><a href="#6、更新博客" class="headerlink" title="6、更新博客"></a>6、更新博客</h2><h3 id="6-1、博客更新"><a href="#6-1、博客更新" class="headerlink" title="6.1、博客更新"></a>6.1、博客更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo g</span><br><span class="line">$ hexo d -g</span><br></pre></td></tr></table></figure>
<h3 id="6-2、博客源码更新"><a href="#6-2、博客源码更新" class="headerlink" title="6.2、博客源码更新"></a>6.2、博客源码更新</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull</span><br><span class="line">$ git add .</span><br><span class="line">$ git status</span><br><span class="line">$ git commit -m <span class="string">&quot;description&quot;</span></span><br><span class="line"><span class="comment"># main是对应的新建的仓库的default分支</span></span><br><span class="line">$ git push origin main</span><br></pre></td></tr></table></figure>

<h2 id="后续计划："><a href="#后续计划：" class="headerlink" title="后续计划："></a>后续计划：</h2><pre><code>增加coding，gitee等国内源的部署与源码托管，使访问速度更快
修改设置博客主题风格，更加个性化，美观
增加评论功能，站点统计等功能
添加到谷歌，百度，等引擎的搜索
</code></pre>
<h2 id="拓展："><a href="#拓展：" class="headerlink" title="拓展："></a>拓展：</h2><p>可自定义主题美化，参考hexo官网<br><a href="https://theme-next.iissnan.com/third-party-services.html">nexT官网配置</a></p>
<h2 id="参考文献："><a href="#参考文献：" class="headerlink" title="参考文献："></a>参考文献：</h2><p>个性化配置，搜索引擎来提高访问：<a href="https://www.cnblogs.com/quellanan/p/11613109.html">https://www.cnblogs.com/quellanan/p/11613109.html</a><br>用码云来替代github，访问更快更稳定：<a href="https://blog.csdn.net/u012294515/article/details/83045860">https://blog.csdn.net/u012294515/article/details/83045860</a><br>用码云管理：<a href="https://blog.csdn.net/qq_35938621/article/details/107592297">https://blog.csdn.net/qq_35938621/article/details/107592297</a><br>增加个性化功能，评论功能等：<a href="https://blog.csdn.net/qq_35117024/category_7904399.html">https://blog.csdn.net/qq_35117024/category_7904399.html</a></p>
<p>解决使用github+Coding+码云部署hexo网站仓库分支不一样的问题(master or main）：<a href="https://blog.csdn.net/weixin_43423781/article/details/120446848">https://blog.csdn.net/weixin_43423781/article/details/120446848</a><br>coding认证不通过的问题解决：<a href="https://blog.csdn.net/qq_23118345/article/details/121938638">https://blog.csdn.net/qq_23118345/article/details/121938638</a></p>
]]></content>
      <tags>
        <tag>hexo+github</tag>
        <tag>个人博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>hello,Hexo（二）</title>
    <url>/2021/12/26/hello-Hexo%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<p>这是一篇草稿纸</p>
<span id="more"></span>

<p><font color="#FF0000"> 我可以设置这一句的颜色哈哈 </font><br><font size=6> 我还可以设置这一句的大小嘻嘻 </font><br><font size=5 color="#FF0000"> 我甚至可以设置这一句的颜色和大小呵呵</font> </p>
<center>这一行需要居中</center>
![](img/图片名.png)

<details>
  <summary><mark><font color=darkred>折叠功能</font></mark></summary>
  <p> - 测试 测试测试</p>
  <pre><code>  
for i in a:
    print(i)
  </code></pre>
</details>

<details>
  <summary>草稿功能</summary>
  草稿相当于很多博客都有的“私密文章”功能。
  <pre><code>  $ hexo new draft "new draft"
  会在source/_drafts目录下生成一个new-draft.md文件。但是这个文件不被显示在页面上，链接也访问不到。也就是说如果你想把某一篇文章移除显示，又不舍得删除，可以把它移动到_drafts目录之中。
  如果你希望强行预览草稿，更改配置文件：
  <pre><code>  render_drafts: true
  或者，如下方式启动server：
  <pre><code>  $ hexo server --drafts
  下面这条命令可以把草稿变成文章，或者页面：
  <pre><code>  $ hexo publish [layout] /filename</code></pre>
</details>



<h1 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h1><details>
<summary>Want to ruin the surprise?</summary>
<br>
Well, you asked for it!

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">plot(pressure)</span><br></pre></td></tr></table></figure>
</details>

<p>coding<br>gitee</p>
<p>头像<br>RSS</p>
<p>加图床</p>
<p>优秀博客：<br><a href="https://muqianzhi.gitee.io/">https://muqianzhi.gitee.io/</a></p>
<p><a href="https://zhang.ge/">https://zhang.ge/</a></p>
<p><a href="https://www.jianshu.com/p/3a05351a37dc">https://www.jianshu.com/p/3a05351a37dc</a></p>
<p><a href="https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2">https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2</a></p>
<p><a href="https://blog.csdn.net/weixin_45126117/article/details/103160228">https://blog.csdn.net/weixin_45126117/article/details/103160228</a></p>
<p>修改博客:</p>
<p><a href="http://theme-next.iissnan.com/theme-settings.html">http://theme-next.iissnan.com/theme-settings.html</a></p>
<p><a href="https://hexo.io/plugins/">https://hexo.io/plugins/</a></p>
<p>github的访问</p>
<p><a href="https://blog.csdn.net/weixin_45126117/article/details/103160228">https://blog.csdn.net/weixin_45126117/article/details/103160228</a></p>
<p>Latex写论文：</p>
<p><a href="https://zhuanlan.zhihu.com/p/37942598">https://zhuanlan.zhihu.com/p/37942598</a></p>
<p>项目搭建：</p>
<p><a href="https://www.bilibili.com/video/BV1ff4y1M7XK?p=89&amp;spm_id_from=pageDriver">https://www.bilibili.com/video/BV1ff4y1M7XK?p=89&amp;spm_id_from=pageDriver</a></p>
<p>ssh-agent，重启失效问题</p>
<p><a href="https://docs.github.com/en/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases#auto-launching-ssh-agent-on-msysgit">https://docs.github.com/en/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases#auto-launching-ssh-agent-on-msysgit</a></p>
<p><a href="https://developer.aliyun.com/article/6923">https://developer.aliyun.com/article/6923</a></p>
<p>添加置顶功能：<a href="https://blog.csdn.net/nineya_com/article/details/103394315">https://blog.csdn.net/nineya_com/article/details/103394315</a></p>
]]></content>
      <categories>
        <category>Diary</category>
        <category>PlayStation</category>
        <category>Games</category>
      </categories>
      <tags>
        <tag>hexo+github</tag>
        <tag>个人博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/12/22/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>

<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>power shell和cmd的区别</title>
    <url>/2022/01/09/power-shell%E5%92%8Ccmd%E7%9A%84%E5%8C%BA%E5%88%AB/</url>
    <content><![CDATA[<center>**缘起**</center>
起因是使用Anaconda3的时候，有两个命令行工具：Anaconda Powershell Prompt 和Anaconda Prompt，让我再一次想起win10系统里面留给我的一个疑惑，power shell和cmd的区别是什么？

<span id="more"></span>

<center>**区别**</center>
有一篇[经验](https://jingyan.baidu.com/article/9f7e7ec094938f6f281554e4.html)分析了几点，并且我逐一验证了

<ul>
<li>资源占用：cmd 0.7MB，powershell &lt;20MB</li>
<li>界面显示：cmd 统一颜色，powershell 有语法高亮</li>
<li>命令排版：cmd 排版随窗口大小变化，美观；powershell 跟随执行命令前的窗口大小</li>
<li>命令支持：cmd仅支持传统windows命令，powershell 增加支持.net命令，引入cmdlet工具</li>
</ul>
<p>综上所述：powershell支持更多命令。内存根本不差这点，界面高亮舒服，排版执行前调整好窗口大小即可，最重要的是命令的支持。</p>
<p>也有一篇微软官方的问答回复了这个问题：<a href="https://answers.microsoft.com/zh-hans/windows/forum/windows_7-performance/power/16a7f1bc-b19f-4d5d-b398-2ee6a1dd826f">power shell和cmd有什么区别？</a></p>
<div>
<details>
<summary>微软回答</summary>
<style>
 p {text-indent:2em;} 
</style>
<p>cmd是和powershell都可以做命令行交互，批处理和powershell脚本功能也相当。
<p>Windows PowerShell 是专为系统管理员设计的新 Windows 命令行 shell。Windows PowerShell 包括交互式提示和脚本环境，两者既可以独立使用也可以组合使用。
<p>与接受和返回文本的大多数 shell 不同，Windows PowerShell 是在 .NET Framework 公共语言运行时 (CLR) 和 .NET Framework 的基础上构建的，它接受和返回 .NET Framework 对象。环境中的这一根本更改带来了管理和配置 Windows 的全新工具和方法。
<p>Windows PowerShell 引入了 cmdlet（读作“command-let”）的概念，这是内置到 shell 中的一个简单的单一功能命令行工具。可以分别使用每个 cmdlet，但是组合使用这些简单的工具执行复杂任务时才发挥其作用。Windows PowerShell 包括一百多个基本的核心 cmdlet，您可以编写自己的 cmdlet 并与其他用户共享它们。
<p>与许多 shell 一样，Windows PowerShell 为您提供了对计算机上文件系统的访问。此外，使用 Windows PowerShell 提供程序还可以访问其他数据存储，如注册表和数字签名证书存储，就像访问文件系统一样容易。
</details>
</div>

<p>最终呢，Anaconda里面的两种命令行的区别，也是同上。</p>
<p>扩展：<a href="https://docs.microsoft.com/en-us/previous-versions//bb648607(v=vs.85)?redirectedfrom=MSDN">Using Cmdlets</a></p>
]]></content>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>《触不可及》影评</title>
    <url>/2022/01/10/%E3%80%8A%E8%A7%A6%E4%B8%8D%E5%8F%AF%E5%8F%8A%E3%80%8B%E5%BD%B1%E8%AF%84/</url>
    <content><![CDATA[<center>**说在前面**</center>
今天借着心情看了这部电影，《触不可及》是2011年[奥利维埃·纳卡什](https://movie.douban.com/celebrity/1001404/) 导演和 [埃里克·托莱达诺](https://movie.douban.com/celebrity/1010884/)导演的法国电影，改编自一个法国富翁的自传，刚好最近建博客记录自己的学习生活，总想写一点什么，自己目前的水平却不够思想深度、不够言语总结、不够文笔动人。

<span id="more"></span>

<p>去豆瓣摘读优秀的点评为开始，希望自己以后也能写出当下认为准确，而富有感染力的影评。（也就是说，我抄的）</p>
<center>**不要以善之名行凶**</center>
<div>
<style>
    p {text-indent:2em;}
</style>
</div>
迷恋跳伞的富翁因事故造成脖子以下瘫痪，于是高薪聘请一位全职陪护，在诸多应聘者当中，他却出人意料的选择了一位毫无经验并且刚从监狱释放的混混。身边人都不理解，他给出的回答是：他总是忘记我瘫痪的事实，我要的就是这样的人，没有怜悯没有特殊对待没有歧视。

<p>午夜他病发，他推他出门，在街头同享根烟。一起打赌，演戏骗警察为超速的他们带路。躲着所有人去山里跳伞，领略从高空俯视大地美景的征服感。他帮他打破瘫痪的自卑，成功抱得美人归。</p>
<p>一个护工，照顾一个瘫痪的人，被拍的有趣、真实、自然、动人。给我去想像的话，剧情或许是这样：护工衣不解带的服侍、牺牲自我、容忍病人的一切坏毛病和坏脾气。</p>
<p>然而在这部电影里，生与死都不再是拿来当噱头的泪点。在生命有限的时光里，宁愿心随我动的放肆，也不愿随时像一个垂死者一样向旁人乞求帮助，这是一种对生命的敬意与尊重。与感动无关，虽然无时无刻令观看的人感受到温情。</p>
<p>在电影后半段，富翁不想再让他陪着一个病人度过余生，于是他换了另一名看护。那位始终小心翼翼，稍有问题就以“他有病”来与旁人解释的专业看护，令他的心一日日苍老，越发怀念那个陪他玩、陪他疯、甚至拿瘫子这件事开玩笑的朋友。</p>
<p>在这个故事里，人性的光辉闪耀，并不在于他们之间，谁为谁做出了更大的牺牲，仅仅只是在于：你给我所想要的安静与尊严，我给你所愿的认可与提携。他们的学识、身份、地位迥异，却在这一点上有着空前契合的态度：<font color="#FF0000">不要用你以为的善意，去让对方感激。</font></p>
<p>每个成年人都有一个无法被陌生人轻易触及的世界，不管是健康的人，亦或者身患重症的人。他们只有在遇到同类的那一刻，才会释放出一种夹杂着欣喜的善意。这种善意，并非传统意义上的善，而是相信并且看重彼此的能量、真诚的表达自己，以及不把自认为的善强加给对方。</p>
<p>不要以善之名行凶，这或许是太多人都未能领悟的事。你认为她需要安抚和劝慰，而她其实只想着能不能一个人独自穿过黑夜。你以为他应该选择更好的那一个，于是百般劝阻，却不知道有些路只能自己走，有些选择或许是错的但却是心中所向。</p>
<p>我们的父母，我们的朋友，毫无疑问都是真心关怀我们的人。可为什么，真正到了艰难之处，却对他们难以言苦，甚至想逃离他们。人与人之间，必须只能是因为在善恶观上达成一致，才可心心相通。旁人认为的善，往往于自身更像负累。旁人认为的恶，却是你认为的自由在高处。</p>
<p>他们为什么能超越阶层的成为心灵知己，并且即使后来各自有了自己的生活，仍然常来常往。因为，他们读懂了对方的善。更因为，他们<font color="#FF0000">首先把对方视为一个有独立人格的自由人，其次才是朋友。</font>任何以情意为筹码，就想左右控制对方人格自由的，最终的结局都必然是毁了那情意。  </p>
<center>【以上，略有删改，在我的博客里，就由我来主宰】</center>
<center>**我说两句**</center>
我最深的感受就两字：尊重。他们互现给了对方想要的尊重。可以说，他们对方比本人更懂自己，阶级、文化的差异，导致他们不知道人生还有其他的可能，富翁没想到瘫痪的人还可以这样去飙车、抽烟、还可以看到凌晨四点的巴黎，可以毫不自卑的面见自己的笔友。

<p>可以说，瘫痪的菲利普被德希斯给了不设限的人生，正与他瘫痪前的滑翔伞等极限运动精神相合，被照顾下的他，完全感受不到，他讨厌的同情心，还能找回曾经的自己。</p>
<p>他们才是真正的知己，不是说一味的八字全和，意见永一视为同；不是说所谓直率，劈头盖脸视为真心；不是说百般呵护，知冷知热视为实意。这俩鬼人的契合，可以说天壤之别，奇怪，说不出是什么感觉，却总觉得很合适。</p>
<p>为什么当菲利普不忍心德希斯一直这么照顾他这样一个病人，而选择换了一个护工时，他苍老地这么快，因为新护工总是小心翼翼地照顾他，而在他眼里，就是时刻告诉他，你是个病人，你不能这样不能那样的。</p>
<p>德希斯总能忘掉菲利普时一个瘫子，总能让菲利普的明天不一样。</p>
]]></content>
      <tags>
        <tag>影评</tag>
      </tags>
  </entry>
</search>
